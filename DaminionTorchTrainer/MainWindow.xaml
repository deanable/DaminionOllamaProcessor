<Window x:Class="DaminionTorchTrainer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converters="clr-namespace:DaminionTorchTrainer.Converters"
        Title="Daminion TorchSharp Trainer" Height="955" Width="1200"
        WindowStartupLocation="CenterScreen"
        MinWidth="1100" MinHeight="600">

    <Window.Resources>
        <!-- Converters -->
        <converters:EnumToBooleanConverter x:Key="EnumToBooleanConverter"/>
        <converters:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter"/>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        
        <!-- Modern Button Style -->
        <Style x:Key="ModernButton" TargetType="Button">
            <Setter Property="Background" Value="#2196F3"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="12,6"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="4" 
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#1976D2"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#0D47A1"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#BDBDBD"/>
                                <Setter Property="Foreground" Value="#757575"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Danger Button Style -->
        <Style x:Key="DangerButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
            <Setter Property="Background" Value="#F44336"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#D32F2F"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#B71C1C"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Success Button Style -->
        <Style x:Key="SuccessButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
            <Setter Property="Background" Value="#4CAF50"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#388E3C"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#2E7D32"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Modern TextBox Style -->
        <Style x:Key="ModernTextBox" TargetType="TextBox">
            <Setter Property="Padding" Value="6,4"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#BDBDBD"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Margin" Value="3"/>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="#2196F3"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Modern PasswordBox Style -->
        <Style x:Key="ModernPasswordBox" TargetType="PasswordBox">
            <Setter Property="Padding" Value="6,4"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#BDBDBD"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Margin" Value="3"/>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="#2196F3"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Modern Label Style -->
        <Style x:Key="ModernLabel" TargetType="Label">
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Margin" Value="3,3,3,1"/>
            <Setter Property="Foreground" Value="#424242"/>
        </Style>

        <!-- Group Box Style -->
        <Style x:Key="ModernGroupBox" TargetType="GroupBox">
            <Setter Property="BorderBrush" Value="#E0E0E0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="HeaderTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" 
                                   FontWeight="Bold" 
                                   Foreground="#424242" 
                                   Margin="0,0,0,3"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Header -->
        <Border Grid.Row="0" Background="#2196F3" Padding="15,10">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Daminion TorchSharp Trainer" 
                           FontSize="24" 
                           FontWeight="Bold" 
                           Foreground="White" 
                           VerticalAlignment="Center"/>
                <TextBlock Text="v1.0" 
                           FontSize="14" 
                           Foreground="#E3F2FD" 
                           VerticalAlignment="Center" 
                           Margin="10,0,0,0"/>
            </StackPanel>
        </Border>

        <!-- Main Content -->
        <Grid Grid.Row="1" Margin="15">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- Column 1 - Data Source and Connection -->
            <StackPanel Grid.Column="0" Margin="0,0,7,0">

                <!-- Data Source Selection -->
                <GroupBox Header="Data Source" Style="{StaticResource ModernGroupBox}">
                    <StackPanel>
                        <Label Content="Select Data Source:" Style="{StaticResource ModernLabel}"/>
                        <StackPanel Orientation="Horizontal" Margin="3">
                            <RadioButton Content="Daminion API" 
                                         IsChecked="{Binding SelectedDataSource, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=API}"
                                         Margin="0,0,15,0"/>
                            <RadioButton Content="Local Images" 
                                         IsChecked="{Binding SelectedDataSource, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Local}"/>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>

                <!-- Daminion Connection Settings -->
                <GroupBox Header="Daminion Connection" Style="{StaticResource ModernGroupBox}" 
                          Visibility="{Binding SelectedDataSource, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter=API}">
                    <StackPanel>
                        <Label Content="Daminion URL:" Style="{StaticResource ModernLabel}"/>
                        <TextBox Text="{Binding DaminionUrl}" Style="{StaticResource ModernTextBox}"/>

                        <Label Content="Username:" Style="{StaticResource ModernLabel}"/>
                        <TextBox Text="{Binding DaminionUsername}" Style="{StaticResource ModernTextBox}"/>

                        <Label Content="Password:" Style="{StaticResource ModernLabel}"/>
                        <PasswordBox x:Name="DaminionPasswordBox" 
                                    Style="{StaticResource ModernPasswordBox}" 
                                    PasswordChanged="DaminionPasswordBox_PasswordChanged"/>

                        <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                            <Button Content="Connect" 
                                    Command="{Binding ConnectCommand}" 
                                    Style="{StaticResource SuccessButton}"/>
                            <Button Content="Disconnect" 
                                    Command="{Binding DisconnectCommand}" 
                                    Style="{StaticResource DangerButton}"/>
                        </StackPanel>
                        
                        <!-- Temporary test button -->
                        <Button Content="Test Connect (Debug)" 
                                Command="{Binding TestConnectCommand}" 
                                Style="{StaticResource ModernButton}"
                                Margin="0,5,0,0"/>

                        <TextBlock Text="{Binding Status}" 
                                   Margin="3" 
                                   TextWrapping="Wrap" 
                                   Foreground="#666"/>
                    </StackPanel>
                </GroupBox>

                <!-- Local Image Settings -->
                <GroupBox Header="Local Image Settings" Style="{StaticResource ModernGroupBox}"
                          Visibility="{Binding SelectedDataSource, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter=Local}">
                    <StackPanel>
                        <Label Content="Image Folder:" Style="{StaticResource ModernLabel}"/>
                        <StackPanel Orientation="Horizontal" Margin="3">
                            <TextBox Text="{Binding LocalImageFolder}" 
                                     Style="{StaticResource ModernTextBox}" 
                                     IsReadOnly="True"
                                     ToolTip="Selected image folder path"/>
                            <Button Content="Browse" 
                                    Command="{Binding BrowseFolderCommand}" 
                                    Style="{StaticResource ModernButton}"
                                    Margin="5,0,0,0"/>
                        </StackPanel>

                        <CheckBox Content="Include Subfolders" 
                                  IsChecked="{Binding IncludeSubfolders}" 
                                  Margin="3,8,3,3"/>
                    </StackPanel>
                </GroupBox>

                <!-- Dataset Information -->
                <GroupBox Header="Dataset Information" Style="{StaticResource ModernGroupBox}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="Name:" Style="{StaticResource ModernLabel}"/>
                        <TextBlock Grid.Row="0" Grid.Column="1" 
                                   Text="{Binding CurrentDataset.Name}" 
                                   VerticalAlignment="Center" Margin="5"/>

                        <Label Grid.Row="1" Grid.Column="0" Content="Samples:" Style="{StaticResource ModernLabel}"/>
                        <TextBlock Grid.Row="1" Grid.Column="1" 
                                   Text="{Binding CurrentDataset.TotalSamples}" 
                                   VerticalAlignment="Center" Margin="5"/>

                        <Label Grid.Row="2" Grid.Column="0" Content="Features:" Style="{StaticResource ModernLabel}"/>
                        <TextBlock Grid.Row="2" Grid.Column="1" 
                                   Text="{Binding CurrentDataset.FeatureDimension}" 
                                   VerticalAlignment="Center" Margin="5"/>
                    </Grid>
                </GroupBox>
            </StackPanel>

            <!-- Column 2 - Data Extraction and Training Configuration -->
            <StackPanel Grid.Column="1" Margin="7,0">

                <!-- Data Extraction -->
                <GroupBox Header="Data Extraction" Style="{StaticResource ModernGroupBox}">
                    <StackPanel>
                        <!-- API-specific settings -->
                        <StackPanel Visibility="{Binding SelectedDataSource, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter=API}">
                            <Label Content="Search Query:" Style="{StaticResource ModernLabel}"/>
                            <TextBox Text="{Binding SearchQuery}" 
                                     Style="{StaticResource ModernTextBox}" 
                                     ToolTip="Enter keywords to search for (e.g., 'city interior'). Multiple terms will be searched inclusively (AND logic)."/>
                        </StackPanel>

                        <Label Content="Max Items:" Style="{StaticResource ModernLabel}"/>
                        <StackPanel Orientation="Horizontal" Margin="3">
                            <Slider Value="{Binding MaxItems}" 
                                    Minimum="100" 
                                    Maximum="10000" 
                                    TickFrequency="1000" 
                                    TickPlacement="BottomRight"
                                    Width="150"
                                    VerticalAlignment="Center"/>
                            <TextBlock Text="{Binding MaxItems, StringFormat='{}{0}'}" 
                                       Margin="10,0,0,0" 
                                       VerticalAlignment="Center"
                                       FontWeight="SemiBold"
                                       MinWidth="40"/>
                        </StackPanel>

                        <Button Content="Extract Data" 
                                Command="{Binding ExtractDataCommand}" 
                                Style="{StaticResource ModernButton}" 
                                Margin="0,8,0,0"/>

                        <!-- Extraction Progress -->
                        <StackPanel Visibility="{Binding IsExtracting, Converter={StaticResource BooleanToVisibilityConverter}}"
                                    Margin="0,8,0,0">
                            <ProgressBar Value="{Binding ExtractionProgress}" 
                                         Maximum="{Binding ExtractionTotal}" 
                                         Height="20" 
                                         Margin="5"/>
                            <TextBlock Text="{Binding ExtractionStatus}" 
                                       Margin="5" 
                                       FontWeight="SemiBold" 
                                       TextWrapping="Wrap"/>
                        </StackPanel>

                        <TextBlock Text="{Binding CurrentDataset.TotalSamples, StringFormat='Samples: {0}'}" 
                                   Margin="3" 
                                   FontWeight="SemiBold"/>
                    </StackPanel>
                </GroupBox>

                <!-- Training Configuration -->
                <GroupBox Header="Training Configuration" Style="{StaticResource ModernGroupBox}">
                    <StackPanel>
                        <Label Content="Learning Rate:" Style="{StaticResource ModernLabel}"/>
                        <TextBox Text="{Binding TrainingConfig.LearningRate}" 
                                 Style="{StaticResource ModernTextBox}"/>

                        <Label Content="Epochs:" Style="{StaticResource ModernLabel}"/>
                        <TextBox Text="{Binding TrainingConfig.Epochs}" 
                                 Style="{StaticResource ModernTextBox}"/>

                        <Label Content="Batch Size:" Style="{StaticResource ModernLabel}"/>
                        <TextBox Text="{Binding TrainingConfig.BatchSize}" 
                                 Style="{StaticResource ModernTextBox}"/>

                        <Label Content="Device:" Style="{StaticResource ModernLabel}"/>
                        <ComboBox SelectedItem="{Binding TrainingConfig.Device}" 
                                  Margin="3" 
                                  Padding="6,4">
                            <ComboBoxItem Content="CPU"/>
                            <ComboBoxItem Content="CUDA"/>
                            <ComboBoxItem Content="MPS"/>
                        </ComboBox>

                        <CheckBox Content="Auto Export ONNX after Training" 
                                  IsChecked="{Binding AutoExportOnnx}" 
                                  Margin="3,8,3,3"/>

                        <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                            <Button Content="Save Config" 
                                    Command="{Binding SaveConfigCommand}" 
                                    Style="{StaticResource ModernButton}"/>
                            <Button Content="Load Config" 
                                    Command="{Binding LoadConfigCommand}" 
                                    Style="{StaticResource ModernButton}"/>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>

                <!-- Model Export -->
                <GroupBox Header="Model Export" Style="{StaticResource ModernGroupBox}">
                    <StackPanel>
                        <TextBlock Text="Export trained model to ONNX format for deployment" 
                                   Margin="3" 
                                   TextWrapping="Wrap" 
                                   Foreground="#666"/>

                        <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                            <Button Content="Export ONNX Model" 
                                    Command="{Binding ExportOnnxCommand}" 
                                    Style="{StaticResource ModernButton}"/>
                            <Button Content="Open Export Folder" 
                                    Command="{Binding OpenExportFolderCommand}" 
                                    Style="{StaticResource ModernButton}"/>
                        </StackPanel>

                        <TextBlock Text="{Binding ExportStatus}" 
                                   Margin="3" 
                                   TextWrapping="Wrap" 
                                   Foreground="#666"/>
                    </StackPanel>
                </GroupBox>
            </StackPanel>

            <!-- Column 3 - Training Controls and Progress -->
            <StackPanel Grid.Column="2" Margin="7,0,0,0">

                <!-- Training Controls -->
                <GroupBox Header="Training" Style="{StaticResource ModernGroupBox}">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                            <Button Content="Start Training" 
                                    Command="{Binding StartTrainingCommand}" 
                                    Style="{StaticResource SuccessButton}"/>
                            <Button Content="Stop Training" 
                                    Command="{Binding StopTrainingCommand}" 
                                    Style="{StaticResource DangerButton}"/>
                        </StackPanel>

                        <!-- Progress Bar -->
                        <ProgressBar Value="{Binding CurrentProgress.Progress, Mode=OneWay}" 
                                     Height="20" 
                                     Margin="5"/>

                        <TextBlock Text="{Binding CurrentProgress.Status}" 
                                   Margin="5" 
                                   FontWeight="SemiBold"/>
                    </StackPanel>
                </GroupBox>

                <!-- Training Progress Details -->
                <GroupBox Header="Training Progress" Style="{StaticResource ModernGroupBox}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="Epoch:" Style="{StaticResource ModernLabel}"/>
                        <TextBlock Grid.Row="0" Grid.Column="1" 
                                   VerticalAlignment="Center" Margin="5">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0}/{1}">
                                    <Binding Path="CurrentProgress.CurrentEpoch"/>
                                    <Binding Path="CurrentProgress.TotalEpochs"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>

                        <Label Grid.Row="1" Grid.Column="0" Content="Training Loss:" Style="{StaticResource ModernLabel}"/>
                        <TextBlock Grid.Row="1" Grid.Column="1" 
                                   Text="{Binding CurrentProgress.TrainingLoss, StringFormat='F4'}" 
                                   VerticalAlignment="Center" Margin="5"/>

                        <Label Grid.Row="2" Grid.Column="0" Content="Validation Loss:" Style="{StaticResource ModernLabel}"/>
                        <TextBlock Grid.Row="2" Grid.Column="1" 
                                   Text="{Binding CurrentProgress.ValidationLoss, StringFormat='F4'}" 
                                   VerticalAlignment="Center" Margin="5"/>

                        <Label Grid.Row="3" Grid.Column="0" Content="Accuracy:" Style="{StaticResource ModernLabel}"/>
                        <TextBlock Grid.Row="3" Grid.Column="1" 
                                   Text="{Binding CurrentProgress.TrainingAccuracy, StringFormat='F4'}" 
                                   VerticalAlignment="Center" Margin="5"/>
                    </Grid>
                </GroupBox>

                <!-- Settings -->
                <GroupBox Header="Settings" Style="{StaticResource ModernGroupBox}">
                    <StackPanel>
                        <Button Content="Save Settings" 
                                Command="{Binding SaveSettingsCommand}" 
                                Style="{StaticResource ModernButton}"/>
                    </StackPanel>
                </GroupBox>
            </StackPanel>

            <!-- Column 4 - Model Testing -->
            <StackPanel Grid.Column="3" Margin="7,0,0,0">
                <GroupBox Header="Model Testing" Style="{StaticResource ModernGroupBox}">
                    <StackPanel>
                        <Label Content="Select Model:" Style="{StaticResource ModernLabel}"/>
                        <StackPanel Orientation="Horizontal" Margin="3">
                            <ComboBox SelectedItem="{Binding SelectedModel}" 
                                      ItemsSource="{Binding AvailableModels}"
                                      Margin="0,0,5,0" 
                                      Padding="6,4"
                                      MinWidth="150"/>
                            <Button Content="Refresh" 
                                    Command="{Binding RefreshModelsCommand}" 
                                    Style="{StaticResource ModernButton}"/>
                        </StackPanel>

                        <Label Content="Select Image:" Style="{StaticResource ModernLabel}"/>
                        <StackPanel Orientation="Horizontal" Margin="3">
                            <TextBox Text="{Binding SelectedImagePath}" 
                                     Style="{StaticResource ModernTextBox}" 
                                     IsReadOnly="True"
                                     ToolTip="Selected image path"/>
                            <Button Content="Browse" 
                                    Command="{Binding BrowseImageCommand}" 
                                    Style="{StaticResource ModernButton}"
                                    Margin="5,0,0,0"/>
                        </StackPanel>

                        <Image Grid.Row="1" Grid.ColumnSpan="2" 
                               Source="{Binding ImagePreview}" 
                               MaxHeight="200" 
                               Margin="0,10,0,10" 
                               Stretch="UniformToFill"/>

                        <Button Content="Test Model" 
                                Command="{Binding TestModelCommand}" 
                                Style="{StaticResource ModernButton}" 
                                Margin="0,8,0,0"/>

                        <TextBlock Text="{Binding TestStatus}" 
                                   Margin="3" 
                                   TextWrapping="Wrap" 
                                   Foreground="#666"/>
                    </StackPanel>
                </GroupBox>
            </StackPanel>
        </Grid>

        <!-- Status Bar -->
        <Border Grid.Row="2" Background="#F5F5F5" BorderBrush="#E0E0E0" BorderThickness="0,1,0,0">
            <TextBlock Text="{Binding Status}" 
                       Margin="20,10" 
                       VerticalAlignment="Center" 
                       Foreground="#666"/>
        </Border>
    </Grid>
</Window>
